unit CFX.Utilities;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, Registry, System.UITypes,
  Types, Vcl.Graphics, CFX.Colors, CFX.Classes;

  function GetAppsUseDarkTheme: Boolean;
  function GetAccentColor( brightencolor: boolean = true ): TColor;
  function GetNTKernelVersion: single;

  // File
  function GetFileSize(FileName: WideString): Int64;

  function ReplaceWinPath(SrcString: string): string;
  function GetUserShellLocation(ShellLocation: FXUserShellLocation): string;

implementation

function GetNTKernelVersion: single;
begin
  Result := Win32MajorVersion + Win32MinorVersion / 10;
end;

function GetAppsUseDarkTheme: Boolean;
var
  R: TRegistry;
begin
  Result := False;
  R := TRegistry.Create;
  try
    R.RootKey := HKEY_CURRENT_USER;
    if R.OpenKeyReadOnly('Software\Microsoft\Windows\CurrentVersion\Themes\Personalize\') and R.ValueExists('AppsUseLightTheme') then begin
      Result := R.ReadInteger('AppsUseLightTheme') <> 1;
    end;
  finally
    R.Free;
  end;
end;

function GetAccentColor( brightencolor: boolean = true ): TColor;
var
  R: TRegistry;
  ARGB: Cardinal;
begin
  Result := $D77800;  //  Default value on error
  R := TRegistry.Create;
  try
    R.RootKey := HKEY_CURRENT_USER;
    if R.OpenKeyReadOnly('Software\Microsoft\Windows\DWM\') and R.ValueExists('AccentColor') then begin
      ARGB := R.ReadInteger('AccentColor');
      Result := ARGB mod $FF000000; //  ARGB to RGB
    end;
  finally
    R.Free;
  end;

  if brightencolor then
    Result := ChangeColorLight(Result, 50);
end;

function GetFileSize(FileName: WideString): Int64;
var
  sr : TSearchRec;
begin
  if FindFirst(fileName, faAnyFile, sr ) = 0 then
    result := Int64(sr.FindData.nFileSizeHigh) shl Int64(32) + Int64(sr.FindData.nFileSizeLow)
  else
    result := -1;
  FindClose(sr);
end;

function GetUserShellLocation(ShellLocation: FXUserShellLocation): string;
var
  RegString, RegValue: string;
begin
  case ShellLocation of
    shlUser: Exit( ReplaceWinPath('%USERPROFILE%') );
    shlAppData: RegValue := 'AppData';
    shlAppDataLocal: RegValue := 'Local AppData';
    shlDocuments: RegValue := 'Personal';
    shlPictures: RegValue := 'My Pictures';
    shlDesktop: RegValue := 'Desktop';
    shlMusic: RegValue := 'My Music';
    shlVideos: RegValue := 'My Video';
    shlNetwork: RegValue := 'NetHood';
    shlRecent: RegValue := 'Recent';
    shlStartMenu: RegValue := 'Start Menu';
    shlPrograms: RegValue := 'Programs';
    shlStartup: RegValue := 'Startup';
    shlDownloads: RegValue := '{374DE290-123F-4565-9164-39C4925E467B}';
  end;

  RegString := WinReg.GetStringValue(RegValue, 'Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders', HKEY_CURRENT_USER, false);

  Result := ReplaceWinPath(RegString);
end;


end.

